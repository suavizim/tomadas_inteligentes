/*************************************************************

  This is a simple demo of sending and receiving some data.
  Be sure to check out other examples!
 *************************************************************/

// Template ID, Device Name and Auth Token are provided by the Blynk.Cloud
// See the Device Info tab, or Template settings
#define BLYNK_TEMPLATE_ID "TMPLIiwRZ-YV"
#define BLYNK_DEVICE_NAME "Quickstart Template"
#define BLYNK_AUTH_TOKEN "myFJIfwHzG1pkIknWScf5r97RlOCDhik"


// Comment this out to disable prints and save space
#define BLYNK_PRINT Serial


#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>

char auth[] = BLYNK_AUTH_TOKEN;

// Your WiFi credentials.
// Set password to "" for open networks.
char ssid[] = "nnay";
char pass[] = "euvousermilionario1kkk";

float vetCorrente[300];
float valor_medio;
float valor_Corrente;
int led = 13;
int led2 = 12;


BlynkTimer timer;

// This function is called every time the Virtual Pin 0 state changes
BLYNK_WRITE(V0)
{
  // Set incoming value from pin V0 to a variable
  int value = param.asInt();

  digitalWrite(led,value);

}

BLYNK_WRITE(V3)
{
  // Set incoming value from pin V0 to a variable
  int value = param.asInt();

  digitalWrite(led2,value);

}


 
// This function sends Arduino's uptime every second to Virtual Pin 2.
void myTimerEvent()
{
  // You can send any value at any time.
  // Please don't send more that 10 values per second.
  Blynk.virtualWrite(V2, millis() / 1000);
}

BLYNK_CONNECTED()
{         // Se conectar com Blynk
  Blynk.syncVirtual(V1);    // Sincroniza com o pino V1
}

void sendSensor()
{
  double maior_Valor = 0;
  double valor_Corrente = 0;  
 
  float tensao = 220;
  float potencia = 0;
 
  for(int i = 0; i < 300; i++)
  {
    vetCorrente[i] = analogRead(39);
    delayMicroseconds(600);
  } 
 
  int somaTotal = 0;
 
  for(int i = 0; i < 300; i++)
  {
    somaTotal = vetCorrente[i] + somaTotal;
  }
  valor_medio = somaTotal / 300;
  valor_medio = valor_medio * 0.0012;
  valor_Corrente = (valor_medio - 2.5);
  valor_Corrente = valor_Corrente*1000;
  valor_Corrente = valor_Corrente / 66; //sensibilidade : 66mV/A para ACS712 30A
 
  Serial.print("Corrente = ");
  Serial.print(valor_Corrente);
  Serial.println(" A");
  potencia = valor_Corrente * tensao;
  Serial.print("PotÃªncia = ");
  Serial.print(potencia);
  Serial.println(" W");
  Serial.print(".");
  delay(500);
  Serial.println("");
  Blynk.virtualWrite(V1, valor_Corrente);      
  delay(100);
}

void setup()
{
  // Debug console
  Serial.begin(115200);
  pinMode(led, OUTPUT);           
  pinMode(led2, OUTPUT);
//  pinMode(14, OUTPUT);           
//  pinMode(27, OUTPUT); 
//  

  Blynk.begin(auth, ssid, pass);
  // You can also specify server:
  //Blynk.begin(auth, ssid, pass, "blynk.cloud", 80);
  //Blynk.begin(auth, ssid, pass, IPAddress(192,168,1,100), 8080);

  // Setup a function to be called every second
  timer.setInterval(1000L, sendSensor);
}

void loop()
{
  Blynk.run();
  timer.run();
  // You can inject your own code or combine it with other sketches.
  // Check other examples on how to communicate with Blynk. Remember
  // to avoid delay() function!
}
